user root;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    keepalive_timeout 65;

    # Compression Gzip pour optimiser les transferts
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    upstream backend {
        server backend:8000;
    }

    # Redirection de HTTP vers HTTPS
    server {
        listen 80;
        server_name localhost;

        return 301 https://$host$request_uri;
    }

    # Serveur HTTPS avec SSL/TLS
    server {
        listen 443 ssl;
        server_name localhost;

		client_max_body_size 10M; # Fixe la limite globale à 10 Mo

        # Chemins vers les certificats SSL générés
        ssl_certificate /etc/nginx/ssl/transcendence.crt;
        ssl_certificate_key /etc/nginx/ssl/transcendence.key;

        # Paramètres SSL/TLS
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

        # Header de sécurité HSTS
        add_header Strict-Transport-Security "max-age=31536000" always;

        # Configuration pour les fichiers statiques
        location /static/ {
            alias /app/static/;
            autoindex on;
            try_files $uri $uri/ =404;
        }

        # Proxy vers le backend
        location / {
            set $cors_origin '';

            if ($http_origin = 'http://localhost:8080') {
                set $cors_origin 'http://localhost:8080';
            }

            if ($http_origin = 'http://127.0.0.1:8080') {
                set $cors_origin 'http://127.0.0.1:8080';
            }

            add_header 'Access-Control-Allow-Origin' $cors_origin;
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT, PATCH';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, hx-request, hx-current-url';

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors_origin;
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT, PATCH';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, hx-request, hx-current-url';
                return 204;
            }

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout de proxy
            proxy_connect_timeout 60s;
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;

            proxy_pass http://backend$request_uri;
        }
    }
}
